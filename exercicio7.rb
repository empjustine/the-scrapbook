require 'pp'

img = [%w(9 9 9 8 9 8 9 8 8 8 8 9 9 9 9),
       %w(8 8 9 8 8 8 8 8 7 8 8 8 9 8 9),
       %w(7 7 7 6 6 7 7 7 7 6 6 6 7 8 8),
       %w(6 7 6 6 2 1 1 1 1 1 1 1 7 8 8),
       %w(7 7 6 4 3 1 0 0 0 1 2 2 6 7 8),
       %w(7 6 5 4 2 0 0 0 0 1 2 5 6 7 8),
       %w(7 7 6 6 7 6 0 0 1 6 7 7 7 8 7),
       %w(7 7 7 7 6 6 0 0 1 6 7 7 8 7 8),
       %w(7 5 8 7 6 6 0 1 1 6 7 7 7 7 8),
       %w(7 4 7 8 7 6 1 1 2 6 7 7 7 8 7),
       %w(6 6 6 7 8 7 2 2 3 6 7 6 7 7 7),
       %w(6 6 4 6 7 6 2 3 5 7 6 6 6 7 7),
       %w(6 6 3 4 6 6 6 7 7 6 6 6 6 7 7),
       %w(4 4 6 4 4 6 6 6 7 7 6 7 7 5 8),
       %w(2 3 6 6 6 4 6 7 6 7 6 6 6 7 4)].map { |row| row.map(&:to_i) }

histogram = Hash[img.flatten.group_by(&:to_i).map { |k, v| [k, v.size] 

}.sort]
puts "histogram: ", histogram
# => {0=>12, 1=>16, 2=>10, 3=>5, 4=>11, 5=>5, 6=>58, 7=>64, 8=>32, 9=>12}

def bitmap_threshold(image, threshold)

  return image.map { |row| row.map { |p| p <= threshold ? 15 : 0 } }
end

puts "bitmap_threshold, 5:"
pp bitmap_threshold(img, 5)
# => [[ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
#     [ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
#     [ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
#     [ 0,  0,  0,  0, 15, 15, 15, 15, 15, 15, 15, 15,  0,  0,  0],
#     [ 0,  0,  0, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  0,  0],
#     [ 0,  0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  0,  0],
#     [ 0,  0,  0,  0,  0,  0, 15, 15, 15,  0,  0,  0,  0,  0,  0],
#     [ 0,  0,  0,  0,  0,  0, 15, 15, 15,  0,  0,  0,  0,  0,  0],
#     [ 0, 15,  0,  0,  0,  0, 15, 15, 15,  0,  0,  0,  0,  0,  0],
#     [ 0, 15,  0,  0,  0,  0, 15, 15, 15,  0,  0,  0,  0,  0,  0],
#     [ 0,  0,  0,  0,  0,  0, 15, 15, 15,  0,  0,  0,  0,  0,  0],
#     [ 0,  0, 15,  0,  0,  0, 15, 15, 15,  0,  0,  0,  0,  0,  0],
#     [ 0,  0, 15, 15,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
#     [15, 15,  0, 15, 15,  0,  0,  0,  0,  0,  0,  0,  0, 15,  0],
#     [15, 15,  0,  0,  0, 15,  0,  0,  0,  0,  0,  0,  0,  0, 15]]

median = img.flatten.sort[(img.flatten.size + 1) / 2]
puts "bitmap_threshold, #{median}:"
# => "bitmap_threshold, 6:"
